var documenterSearchIndex = {"docs":
[{"location":"#GridTools.jl","page":"Home","title":"GridTools.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"where(mask::Field, t1::Tuple, t2::Tuple)","category":"page"},{"location":"#GridTools.where-Tuple{Field, Tuple, Tuple}","page":"Home","title":"GridTools.where","text":"where(mask::Field, true, false)\n\nThe 'where' loops over each entry of the mask and returns values corresponding to the same indexes of either the true or the false branch.\n\nArguments\n\nmask::Field: a field with eltype Boolean\ntrue: a tuple, a field, or a scalar\nfalse: a tuple, a field, or a scalar\n\nExamples\n\njulia> mask = Field((Cell, K), rand(Bool, (3,3)))\n3x3  Field with dims (Cell_(), K_()) and broadcasted_dims (Cell_(), K_()):\n 1  0  0\n 0  1  0\n 1  1  1\njulia> a = Field((Cell, K), fill(1.0, (3,3)));\njulia> b = Field((Cell, K), fill(2.0, (3,3)));\njulia> where(mask, a, b)\n3x3  Field with dims (Cell_(), K_()) and broadcasted_dims (Cell_(), K_()):\n 1.0  2.0  2.0\n 2.0  1.0  2.0\n 1.0  1.0  1.0\n\nThe where function builtin also allows for nesting of tuples. In this scenario, it will first perform an unrolling: where(mask, ((a, b), (b, a)), ((c, d), (d, c))) â€“>  where(mask, (a, b), (c, d)) and where(mask, (b, a), (d, c)) and then combine results to match the return type:\n\n\n\n\n\n","category":"method"}]
}
